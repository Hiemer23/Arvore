

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Oct 07 21:26:16 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F628A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     008C                     	;# 
    85     008E                     	;# 
    86     0092                     	;# 
    87     0098                     	;# 
    88     0099                     	;# 
    89     009A                     	;# 
    90     009B                     	;# 
    91     009C                     	;# 
    92     009D                     	;# 
    93     009F                     	;# 
    94     0000                     	;# 
    95     0001                     	;# 
    96     0002                     	;# 
    97     0003                     	;# 
    98     0004                     	;# 
    99     0005                     	;# 
   100     0006                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     008C                     	;# 
   122     008E                     	;# 
   123     0092                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009F                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000E                     	;# 
   142     000E                     	;# 
   143     000F                     	;# 
   144     0010                     	;# 
   145     0011                     	;# 
   146     0012                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     008C                     	;# 
   159     008E                     	;# 
   160     0092                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009A                     	;# 
   164     009B                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009F                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     000A                     	;# 
   176     000B                     	;# 
   177     000C                     	;# 
   178     000E                     	;# 
   179     000E                     	;# 
   180     000F                     	;# 
   181     0010                     	;# 
   182     0011                     	;# 
   183     0012                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     008C                     	;# 
   196     008E                     	;# 
   197     0092                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009F                     	;# 
   205     0001                     _TMR0	set	1
   206     000B                     _INTCONbits	set	11
   207     0005                     _PORTA	set	5
   208     005D                     _T0IE	set	93
   209     005F                     _GIE	set	95
   210     005E                     _PEIE	set	94
   211     0081                     _OPTION_REGbits	set	129
   212     008E                     _PCONbits	set	142
   213     0085                     _TRISA	set	133
   214                           
   215                           	psect	cinit
   216     000D                     start_initialization:	
   217                           ; #config settings
   218                           
   219     000D                     __initialization:
   220                           
   221                           ; Clear objects allocated to COMMON
   222     000D  01FA               	clrf	__pbssCOMMON& (0+127)
   223                           
   224                           ; Clear objects allocated to BANK0
   225     000E  1383               	bcf	3,7	;select IRP bank0
   226     000F  3020               	movlw	low __pbssBANK0
   227     0010  0084               	movwf	4
   228     0011  3052               	movlw	low (__pbssBANK0+50)
   229     0012  216A               	fcall	clear_ram0
   230     0013                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     0013                     __end_of__initialization:
   234     0013  0183               	clrf	3
   235     0014  2940               	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238     007A                     __pbssCOMMON:
   239     007A                     _counter_100ms:
   240     007A                     	ds	1
   241                           
   242                           	psect	bssBANK0
   243     0020                     __pbssBANK0:
   244     0020                     _Pino:
   245     0020                     	ds	50
   246                           
   247                           	psect	clrtext
   248     016A                     clear_ram0:	
   249                           ;	Called with FSR containing the base address, and
   250                           ;	W with the last address+1
   251                           
   252     016A  0064               	clrwdt	;clear the watchdog before getting into this loop
   253     016B                     clrloop0:
   254     016B  0180               	clrf	0	;clear RAM location pointed to by FSR
   255     016C  0A84               	incf	4,f	;increment pointer
   256     016D  0604               	xorwf	4,w	;XOR with final address
   257     016E  1903               	btfsc	3,2	;have we reached the end yet?
   258     016F  3400               	retlw	0	;all done for this memory range, return
   259     0170  0604               	xorwf	4,w	;XOR again to restore value
   260     0171  296B               	goto	clrloop0	;do the next byte
   261                           
   262                           	psect	cstackCOMMON
   263     0070                     __pcstackCOMMON:
   264     0070                     ?_Task_Saida:
   265     0070                     ?_Inicializar_Hardware:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0070                     ?_Init_Osc:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ?_Init_Timer:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0070                     ?_Init_Saidas:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0070                     ?_acionaSaida:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ?_interruptsManager:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ??_interruptsManager:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ?_tempo100_ms:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294     0070                     	ds	3
   295     0073                     ??_Init_Osc:
   296     0073                     ??_Init_Timer:	
   297                           ; 1 bytes @ 0x3
   298                           
   299     0073                     ??_Init_Saidas:	
   300                           ; 1 bytes @ 0x3
   301                           
   302     0073                     ??_acionaSaida:	
   303                           ; 1 bytes @ 0x3
   304                           
   305     0073                     ?___bmul:	
   306                           ; 1 bytes @ 0x3
   307                           
   308     0073                     Init_Saidas@i:	
   309                           ; 1 bytes @ 0x3
   310                           
   311     0073                     ___bmul@multiplicand:	
   312                           ; 1 bytes @ 0x3
   313                           
   314                           
   315                           ; 1 bytes @ 0x3
   316     0073                     	ds	1
   317     0074                     ??___bmul:
   318     0074                     ___bmul@product:	
   319                           ; 1 bytes @ 0x4
   320                           
   321                           
   322                           ; 1 bytes @ 0x4
   323     0074                     	ds	1
   324     0075                     ??_Inicializar_Hardware:
   325     0075                     acionaSaida@pino:	
   326                           ; 1 bytes @ 0x5
   327                           
   328     0075                     ___bmul@multiplier:	
   329                           ; 1 bytes @ 0x5
   330                           
   331                           
   332                           ; 1 bytes @ 0x5
   333     0075                     	ds	1
   334     0076                     ??_Task_Saida:
   335                           
   336                           ; 1 bytes @ 0x6
   337     0076                     	ds	2
   338     0078                     Task_Saida@i:
   339                           
   340                           ; 1 bytes @ 0x8
   341     0078                     	ds	1
   342     0079                     ??_tempo100_ms:
   343     0079                     ??_main:	
   344                           ; 1 bytes @ 0x9
   345                           
   346                           
   347                           ; 1 bytes @ 0x9
   348     0079                     	ds	1
   349                           
   350                           	psect	maintext
   351     0140                     __pmaintext:	
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 27 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : B00/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   371 ;;      Params:         0       0       0       0
   372 ;;      Locals:         0       0       0       0
   373 ;;      Temps:          1       0       0       0
   374 ;;      Totals:         1       0       0       0
   375 ;;Total ram usage:        1 bytes
   376 ;; Hardware stack levels required when called: 4
   377 ;; This function calls:
   378 ;;		_Inicializar_Hardware
   379 ;;		_tempo100_ms
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     0140                     _main:	
   386                           ;psect for function _main
   387                           
   388     0140                     l832:	
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   391                           
   392                           
   393                           ;main.c: 28:     Inicializar_Hardware();
   394     0140  2172               	fcall	_Inicializar_Hardware
   395     0141                     l834:
   396                           
   397                           ;main.c: 29:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   398     0141  3003               	movlw	3
   399     0142  00F9               	movwf	??_main
   400     0143                     u177:
   401     0143  0BF9               	decfsz	??_main,f
   402     0144  2943               	goto	u177
   403     0145                     l836:
   404                           
   405                           ;main.c: 31:         if (counter_100ms >= 100) {
   406     0145  3064               	movlw	100
   407     0146  027A               	subwf	_counter_100ms,w
   408     0147  1C03               	skipc
   409     0148  294A               	goto	u161
   410     0149  294B               	goto	u160
   411     014A                     u161:
   412     014A  2945               	goto	l836
   413     014B                     u160:
   414     014B                     l838:
   415                           
   416                           ;main.c: 32:             tempo100_ms();
   417     014B  2178               	fcall	_tempo100_ms
   418     014C                     l840:
   419                           
   420                           ;main.c: 33:             counter_100ms = 0;
   421     014C  01FA               	clrf	_counter_100ms
   422     014D  2945               	goto	l836
   423     014E  280C               	ljmp	start
   424     014F                     __end_of_main:
   425                           
   426                           	psect	text1
   427     0178                     __ptext1:	
   428 ;; *************** function _tempo100_ms *****************
   429 ;; Defined at:
   430 ;;		line 23 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   444 ;;      Params:         0       0       0       0
   445 ;;      Locals:         0       0       0       0
   446 ;;      Temps:          0       0       0       0
   447 ;;      Totals:         0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 3
   451 ;; This function calls:
   452 ;;		_Task_Saida
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458     0178                     _tempo100_ms:	
   459                           ;psect for function _tempo100_ms
   460                           
   461     0178                     l830:	
   462                           ;incstack = 0
   463                           ; Regs used in _tempo100_ms: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   464                           
   465                           
   466                           ;main.c: 24:     Task_Saida();
   467     0178  2082               	fcall	_Task_Saida
   468     0179                     l21:
   469     0179  0008               	return
   470     017A                     __end_of_tempo100_ms:
   471                           
   472                           	psect	text2
   473     0082                     __ptext2:	
   474 ;; *************** function _Task_Saida *****************
   475 ;; Defined at:
   476 ;;		line 70 in file "Saida.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  i               1    8[COMMON] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   490 ;;      Params:         0       0       0       0
   491 ;;      Locals:         1       0       0       0
   492 ;;      Temps:          2       0       0       0
   493 ;;      Totals:         3       0       0       0
   494 ;;Total ram usage:        3 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 2
   497 ;; This function calls:
   498 ;;		___bmul
   499 ;;		_acionaSaida
   500 ;; This function is called by:
   501 ;;		_tempo100_ms
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     0082                     _Task_Saida:	
   506                           ;psect for function _Task_Saida
   507                           
   508     0082                     l812:	
   509                           ;incstack = 0
   510                           ; Regs used in _Task_Saida: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   511                           
   512                           
   513                           ;Saida.c: 71:     uint8_t i = 0;
   514     0082  01F8               	clrf	Task_Saida@i
   515                           
   516                           ;Saida.c: 72:     for (i = 0; i < 5; i++) {
   517     0083  01F8               	clrf	Task_Saida@i
   518     0084                     l818:
   519                           
   520                           ;Saida.c: 73:         if (Pino[i].ultimoTempo <= 0) {
   521     0084  300A               	movlw	10
   522     0085  00F3               	movwf	___bmul@multiplicand
   523     0086  0878               	movf	Task_Saida@i,w
   524     0087  212B               	fcall	___bmul
   525     0088  3E28               	addlw	(low ((_Pino| 0+8)))& (0+255)
   526     0089  0084               	movwf	4
   527     008A  1383               	bcf	3,7	;select IRP bank0
   528     008B  0800               	movf	0,w
   529     008C  00F6               	movwf	??_Task_Saida
   530     008D  0A84               	incf	4,f
   531     008E  0800               	movf	0,w
   532     008F  00F7               	movwf	??_Task_Saida+1
   533     0090  0876               	movf	??_Task_Saida,w
   534     0091  0477               	iorwf	??_Task_Saida+1,w
   535     0092  1D03               	btfss	3,2
   536     0093  2895               	goto	u131
   537     0094  2896               	goto	u130
   538     0095                     u131:
   539     0095  28C5               	goto	l824
   540     0096                     u130:
   541     0096                     l820:
   542                           
   543                           ;Saida.c: 74:             if ((Pino[i].valorAtual != Pino[i].valorAnterior)) {
   544     0096  300A               	movlw	10
   545     0097  00F3               	movwf	___bmul@multiplicand
   546     0098  0878               	movf	Task_Saida@i,w
   547     0099  212B               	fcall	___bmul
   548     009A  3E27               	addlw	(low ((_Pino| 0+7)))& (0+255)
   549     009B  0084               	movwf	4
   550     009C  1383               	bcf	3,7	;select IRP bank0
   551     009D  0800               	movf	0,w
   552     009E  00F6               	movwf	??_Task_Saida
   553     009F  300A               	movlw	10
   554     00A0  00F3               	movwf	___bmul@multiplicand
   555     00A1  0878               	movf	Task_Saida@i,w
   556     00A2  212B               	fcall	___bmul
   557     00A3  3E26               	addlw	(low ((_Pino| 0+6)))& (0+255)
   558     00A4  0084               	movwf	4
   559     00A5  1383               	bcf	3,7	;select IRP bank0
   560     00A6  0800               	movf	0,w
   561     00A7  0676               	xorwf	??_Task_Saida,w
   562     00A8  1903               	skipnz
   563     00A9  28AB               	goto	u141
   564     00AA  28AC               	goto	u140
   565     00AB                     u141:
   566     00AB  28D4               	goto	l826
   567     00AC                     u140:
   568     00AC                     l822:
   569                           
   570                           ;Saida.c: 75:                 Pino[i].valorAnterior = Pino[i].valorAtual;
   571     00AC  300A               	movlw	10
   572     00AD  00F3               	movwf	___bmul@multiplicand
   573     00AE  0878               	movf	Task_Saida@i,w
   574     00AF  212B               	fcall	___bmul
   575     00B0  3E26               	addlw	(low ((_Pino| 0+6)))& (0+255)
   576     00B1  0084               	movwf	4
   577     00B2  1383               	bcf	3,7	;select IRP bank0
   578     00B3  0800               	movf	0,w
   579     00B4  00F6               	movwf	??_Task_Saida
   580     00B5  300A               	movlw	10
   581     00B6  00F3               	movwf	___bmul@multiplicand
   582     00B7  0878               	movf	Task_Saida@i,w
   583     00B8  212B               	fcall	___bmul
   584     00B9  3E27               	addlw	(low ((_Pino| 0+7)))& (0+255)
   585     00BA  0084               	movwf	4
   586     00BB  0876               	movf	??_Task_Saida,w
   587     00BC  1383               	bcf	3,7	;select IRP bank0
   588     00BD  0080               	movwf	0
   589                           
   590                           ;Saida.c: 76:                 acionaSaida(&Pino[i]);
   591     00BE  300A               	movlw	10
   592     00BF  00F3               	movwf	___bmul@multiplicand
   593     00C0  0878               	movf	Task_Saida@i,w
   594     00C1  212B               	fcall	___bmul
   595     00C2  3E20               	addlw	(low (_Pino| 0))& (0+255)
   596     00C3  20DF               	fcall	_acionaSaida
   597                           
   598                           ;Saida.c: 77:                 continue;
   599     00C4  28D4               	goto	l826
   600     00C5                     l824:
   601                           
   602                           ;Saida.c: 80:             Pino[i].ultimoTempo -= 100;
   603     00C5  300A               	movlw	10
   604     00C6  00F3               	movwf	___bmul@multiplicand
   605     00C7  0878               	movf	Task_Saida@i,w
   606     00C8  212B               	fcall	___bmul
   607     00C9  3E28               	addlw	(low ((_Pino| 0+8)))& (0+255)
   608     00CA  0084               	movwf	4
   609     00CB  3064               	movlw	100
   610     00CC  1383               	bcf	3,7	;select IRP bank0
   611     00CD  0280               	subwf	0,f
   612     00CE  0F84               	incfsz	4,f
   613     00CF  3000               	movlw	0
   614     00D0  1C03               	skipc
   615     00D1  0380               	decf	0,f
   616     00D2  0280               	subwf	0,f
   617     00D3  0384               	decf	4,f
   618     00D4                     l826:
   619     00D4  3001               	movlw	1
   620     00D5  00FF               	movwf	btemp+1
   621     00D6  087F               	movf	btemp+1,w
   622     00D7  07F8               	addwf	Task_Saida@i,f
   623     00D8                     l828:
   624     00D8  3005               	movlw	5
   625     00D9  0278               	subwf	Task_Saida@i,w
   626     00DA  1C03               	skipc
   627     00DB  28DD               	goto	u151
   628     00DC  28DE               	goto	u150
   629     00DD                     u151:
   630     00DD  2884               	goto	l818
   631     00DE                     u150:
   632     00DE                     l81:
   633     00DE  0008               	return
   634     00DF                     __end_of_Task_Saida:
   635                           
   636                           	psect	text3
   637     00DF                     __ptext3:	
   638 ;; *************** function _acionaSaida *****************
   639 ;; Defined at:
   640 ;;		line 85 in file "Saida.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  pino            1    wreg     PTR struct .
   643 ;;		 -> Pino(50), 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  pino            1    5[COMMON] PTR struct .
   646 ;;		 -> Pino(50), 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   656 ;;      Params:         0       0       0       0
   657 ;;      Locals:         1       0       0       0
   658 ;;      Temps:          2       0       0       0
   659 ;;      Totals:         3       0       0       0
   660 ;;Total ram usage:        3 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_Task_Saida
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670     00DF                     _acionaSaida:	
   671                           ;psect for function _acionaSaida
   672                           
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _acionaSaida: [wreg-fsr0h+status,2+status,0+btemp+1]
   676                           ;acionaSaida@pino stored from wreg
   677     00DF  00F5               	movwf	acionaSaida@pino
   678     00E0                     l630:
   679                           
   680                           ;Saida.c: 86:     if (pino->valorAtual) {
   681     00E0  0875               	movf	acionaSaida@pino,w
   682     00E1  3E06               	addlw	6
   683     00E2  0084               	movwf	4
   684     00E3  1383               	bcf	3,7	;select IRP bank0
   685     00E4  0800               	movf	0,w
   686     00E5  1903               	btfsc	3,2
   687     00E6  28E8               	goto	u11
   688     00E7  28E9               	goto	u10
   689     00E8                     u11:
   690     00E8  28FD               	goto	l634
   691     00E9                     u10:
   692     00E9                     l632:
   693                           
   694                           ;Saida.c: 87:         *(pino->port) |= (pino->pinMask);
   695     00E9  0875               	movf	acionaSaida@pino,w
   696     00EA  3E04               	addlw	4
   697     00EB  0084               	movwf	4
   698     00EC  0800               	movf	0,w
   699     00ED  00FF               	movwf	btemp+1
   700     00EE  0875               	movf	acionaSaida@pino,w
   701     00EF  0084               	movwf	4
   702     00F0  0800               	movf	0,w
   703     00F1  00F3               	movwf	??_acionaSaida
   704     00F2  0A84               	incf	4,f
   705     00F3  0800               	movf	0,w
   706     00F4  00F4               	movwf	??_acionaSaida+1
   707     00F5  0873               	movf	??_acionaSaida,w
   708     00F6  0084               	movwf	4
   709     00F7  1783               	bsf	3,7
   710     00F8  1C74               	btfss	??_acionaSaida+1,0
   711     00F9  1383               	bcf	3,7
   712     00FA  087F               	movf	btemp+1,w
   713     00FB  0480               	iorwf	0,f
   714                           
   715                           ;Saida.c: 88:     } else {
   716     00FC  2910               	goto	l86
   717     00FD                     l634:
   718                           
   719                           ;Saida.c: 89:         *(pino->port) &= ~(pino->pinMask);
   720     00FD  0875               	movf	acionaSaida@pino,w
   721     00FE  3E04               	addlw	4
   722     00FF  0084               	movwf	4
   723     0100  0900               	comf	0,w
   724     0101  00FF               	movwf	btemp+1
   725     0102  0875               	movf	acionaSaida@pino,w
   726     0103  0084               	movwf	4
   727     0104  0800               	movf	0,w
   728     0105  00F3               	movwf	??_acionaSaida
   729     0106  0A84               	incf	4,f
   730     0107  0800               	movf	0,w
   731     0108  00F4               	movwf	??_acionaSaida+1
   732     0109  0873               	movf	??_acionaSaida,w
   733     010A  0084               	movwf	4
   734     010B  1783               	bsf	3,7
   735     010C  1C74               	btfss	??_acionaSaida+1,0
   736     010D  1383               	bcf	3,7
   737     010E  087F               	movf	btemp+1,w
   738     010F  0580               	andwf	0,f
   739     0110                     l86:
   740     0110  0008               	return
   741     0111                     __end_of_acionaSaida:
   742                           
   743                           	psect	text4
   744     012B                     __ptext4:	
   745 ;; *************** function ___bmul *****************
   746 ;; Defined at:
   747 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  multiplier      1    wreg     unsigned char 
   750 ;;  multiplicand    1    3[COMMON] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  multiplier      1    5[COMMON] unsigned char 
   753 ;;  product         1    4[COMMON] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      unsigned char 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, btemp+1
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   763 ;;      Params:         1       0       0       0
   764 ;;      Locals:         2       0       0       0
   765 ;;      Temps:          0       0       0       0
   766 ;;      Totals:         3       0       0       0
   767 ;;Total ram usage:        3 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_Task_Saida
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     012B                     ___bmul:	
   778                           ;psect for function ___bmul
   779                           
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
   783                           ;___bmul@multiplier stored from wreg
   784     012B  00F5               	movwf	___bmul@multiplier
   785     012C                     l796:
   786     012C  01F4               	clrf	___bmul@product
   787     012D                     l798:
   788     012D  1C75               	btfss	___bmul@multiplier,0
   789     012E  2930               	goto	u111
   790     012F  2931               	goto	u110
   791     0130                     u111:
   792     0130  2935               	goto	l802
   793     0131                     u110:
   794     0131                     l800:
   795     0131  0873               	movf	___bmul@multiplicand,w
   796     0132  00FF               	movwf	btemp+1
   797     0133  087F               	movf	btemp+1,w
   798     0134  07F4               	addwf	___bmul@product,f
   799     0135                     l802:
   800     0135  1003               	clrc
   801     0136  0DF3               	rlf	___bmul@multiplicand,f
   802     0137                     l804:
   803     0137  1003               	clrc
   804     0138  0CF5               	rrf	___bmul@multiplier,f
   805     0139                     l806:
   806     0139  0875               	movf	___bmul@multiplier,w
   807     013A  1D03               	btfss	3,2
   808     013B  293D               	goto	u121
   809     013C  293E               	goto	u120
   810     013D                     u121:
   811     013D  292D               	goto	l798
   812     013E                     u120:
   813     013E                     l808:
   814     013E  0874               	movf	___bmul@product,w
   815     013F                     l198:
   816     013F  0008               	return
   817     0140                     __end_of___bmul:
   818                           
   819                           	psect	text5
   820     0172                     __ptext5:	
   821 ;; *************** function _Inicializar_Hardware *****************
   822 ;; Defined at:
   823 ;;		line 16 in file "Init.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   837 ;;      Params:         0       0       0       0
   838 ;;      Locals:         0       0       0       0
   839 ;;      Temps:          0       0       0       0
   840 ;;      Totals:         0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 2
   844 ;; This function calls:
   845 ;;		_Init_Osc
   846 ;;		_Init_Saidas
   847 ;;		_Init_Timer
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853     0172                     _Inicializar_Hardware:	
   854                           ;psect for function _Inicializar_Hardware
   855                           
   856     0172                     l768:	
   857                           ;incstack = 0
   858                           ; Regs used in _Inicializar_Hardware: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
   859                           
   860                           
   861                           ;Init.c: 17:     Init_Osc();
   862     0172  215D               	fcall	_Init_Osc
   863                           
   864                           ;Init.c: 18:     Init_Timer();
   865     0173  214F               	fcall	_Init_Timer
   866     0174                     l770:
   867                           
   868                           ;Init.c: 19:     Init_Saidas();
   869     0174  2015               	fcall	_Init_Saidas
   870     0175                     l772:
   871                           
   872                           ;Init.c: 21:     PEIE = 1;
   873     0175  170B               	bsf	11,6	;volatile
   874     0176                     l774:
   875                           
   876                           ;Init.c: 23:     GIE = 1;
   877     0176  178B               	bsf	11,7	;volatile
   878     0177                     l53:
   879     0177  0008               	return
   880     0178                     __end_of_Inicializar_Hardware:
   881                           
   882                           	psect	text6
   883     014F                     __ptext6:	
   884 ;; *************** function _Init_Timer *****************
   885 ;; Defined at:
   886 ;;		line 32 in file "Init.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   900 ;;      Params:         0       0       0       0
   901 ;;      Locals:         0       0       0       0
   902 ;;      Temps:          0       0       0       0
   903 ;;      Totals:         0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_Inicializar_Hardware
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     014F                     _Init_Timer:	
   915                           ;psect for function _Init_Timer
   916                           
   917     014F                     l674:	
   918                           ;incstack = 0
   919                           ; Regs used in _Init_Timer: [wreg+status,2+status,0]
   920                           
   921                           
   922                           ;Init.c: 33:     OPTION_REGbits.nRBPU = 1;
   923     014F  1683               	bsf	3,5	;RP0=1, select bank1
   924     0150  1303               	bcf	3,6	;RP1=0, select bank1
   925     0151  1781               	bsf	1,7	;volatile
   926                           
   927                           ;Init.c: 34:     OPTION_REGbits.PSA = 0;
   928     0152  1181               	bcf	1,3	;volatile
   929     0153                     l676:
   930                           
   931                           ;Init.c: 35:     OPTION_REGbits.PS = 1;
   932     0153  0801               	movf	1,w	;volatile
   933     0154  39F8               	andlw	-8
   934     0155  3801               	iorlw	1
   935     0156  0081               	movwf	1	;volatile
   936     0157                     l678:
   937                           
   938                           ;Init.c: 36:     T0IE = 1;
   939     0157  168B               	bsf	11,5	;volatile
   940     0158                     l680:
   941                           
   942                           ;Init.c: 37:     TMR0 = 6;
   943     0158  3006               	movlw	6
   944     0159  1283               	bcf	3,5	;RP0=0, select bank0
   945     015A  1303               	bcf	3,6	;RP1=0, select bank0
   946     015B  0081               	movwf	1	;volatile
   947     015C                     l59:
   948     015C  0008               	return
   949     015D                     __end_of_Init_Timer:
   950                           
   951                           	psect	text7
   952     0015                     __ptext7:	
   953 ;; *************** function _Init_Saidas *****************
   954 ;; Defined at:
   955 ;;		line 17 in file "Saida.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  initial_valu    1    0        unsigned char 
   960 ;;  i               1    3[COMMON] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   970 ;;      Params:         0       0       0       0
   971 ;;      Locals:         1       0       0       0
   972 ;;      Temps:          0       0       0       0
   973 ;;      Totals:         1       0       0       0
   974 ;;Total ram usage:        1 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_Inicializar_Hardware
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     0015                     _Init_Saidas:	
   985                           ;psect for function _Init_Saidas
   986                           
   987     0015                     l682:	
   988                           ;incstack = 0
   989                           ; Regs used in _Init_Saidas: [wreg-fsr0h+status,2+status,0+btemp+1]
   990                           
   991     0015  01F3               	clrf	Init_Saidas@i
   992     0016                     l684:
   993                           
   994                           ;Saida.c: 20:     Pino[0].port = &PORTA;
   995     0016  3000               	movlw	0
   996     0017  1283               	bcf	3,5	;RP0=0, select bank0
   997     0018  1303               	bcf	3,6	;RP1=0, select bank0
   998     0019  00A1               	movwf	_Pino+1
   999     001A  3005               	movlw	5
  1000     001B  00A0               	movwf	_Pino
  1001     001C                     l686:
  1002                           
  1003                           ;Saida.c: 21:     Pino[0].tris = &TRISA;
  1004     001C  3000               	movlw	0
  1005     001D  00A3               	movwf	(low ((_Pino| 0+2))+1)
  1006     001E  3085               	movlw	133
  1007     001F  00A2               	movwf	low ((_Pino| 0+2))
  1008     0020                     l688:
  1009                           
  1010                           ;Saida.c: 22:     Pino[0].pinMask = 0b00000001;
  1011     0020  01A4               	clrf	_Pino+4
  1012     0021  0AA4               	incf	_Pino+4,f
  1013     0022                     l690:
  1014                           
  1015                           ;Saida.c: 23:     Pino[0].tempoTroca = 1 * 100;
  1016     0022  3064               	movlw	100
  1017     0023  00A5               	movwf	_Pino+5
  1018     0024                     l692:
  1019                           
  1020                           ;Saida.c: 24:     Pino[0].valorAtual = initial_value;
  1021     0024  01A6               	clrf	_Pino+6
  1022     0025                     l694:
  1023                           
  1024                           ;Saida.c: 25:     Pino[0].valorAnterior = !initial_value;
  1025     0025  01A7               	clrf	_Pino+7
  1026     0026  0AA7               	incf	_Pino+7,f
  1027     0027                     l696:
  1028                           
  1029                           ;Saida.c: 26:     Pino[0].ultimoTempo = 0;
  1030     0027  01A8               	clrf	_Pino+8
  1031     0028  01A9               	clrf	_Pino+9
  1032     0029                     l698:
  1033                           
  1034                           ;Saida.c: 29:     Pino[1].port = &PORTA;
  1035     0029  3000               	movlw	0
  1036     002A  00AB               	movwf	(low ((_Pino| 0+10))+1)
  1037     002B  3005               	movlw	5
  1038     002C  00AA               	movwf	low ((_Pino| 0+10))
  1039     002D                     l700:
  1040                           
  1041                           ;Saida.c: 30:     Pino[1].tris = &TRISA;
  1042     002D  3000               	movlw	0
  1043     002E  00AD               	movwf	(low ((_Pino| 0+12))+1)
  1044     002F  3085               	movlw	133
  1045     0030  00AC               	movwf	low ((_Pino| 0+12))
  1046     0031                     l702:
  1047                           
  1048                           ;Saida.c: 31:     Pino[1].pinMask = 0b00000010;
  1049     0031  3002               	movlw	2
  1050     0032  00AE               	movwf	_Pino+14
  1051     0033                     l704:
  1052                           
  1053                           ;Saida.c: 32:     Pino[1].tempoTroca = 1 * 100;
  1054     0033  3064               	movlw	100
  1055     0034  00AF               	movwf	_Pino+15
  1056     0035                     l706:
  1057                           
  1058                           ;Saida.c: 33:     Pino[1].valorAtual = initial_value;
  1059     0035  01B0               	clrf	_Pino+16
  1060     0036                     l708:
  1061                           
  1062                           ;Saida.c: 34:     Pino[1].valorAnterior = !initial_value;
  1063     0036  01B1               	clrf	_Pino+17
  1064     0037  0AB1               	incf	_Pino+17,f
  1065     0038                     l710:
  1066                           
  1067                           ;Saida.c: 35:     Pino[1].ultimoTempo = 0;
  1068     0038  01B2               	clrf	_Pino+18
  1069     0039  01B3               	clrf	_Pino+19
  1070     003A                     l712:
  1071                           
  1072                           ;Saida.c: 38:     Pino[2].port = &PORTA;
  1073     003A  3000               	movlw	0
  1074     003B  00B5               	movwf	(low ((_Pino| 0+20))+1)
  1075     003C  3005               	movlw	5
  1076     003D  00B4               	movwf	low ((_Pino| 0+20))
  1077     003E                     l714:
  1078                           
  1079                           ;Saida.c: 39:     Pino[2].tris = &TRISA;
  1080     003E  3000               	movlw	0
  1081     003F  00B7               	movwf	(low ((_Pino| 0+22))+1)
  1082     0040  3085               	movlw	133
  1083     0041  00B6               	movwf	low ((_Pino| 0+22))
  1084     0042                     l716:
  1085                           
  1086                           ;Saida.c: 40:     Pino[2].pinMask = 0b00000100;
  1087     0042  3004               	movlw	4
  1088     0043  00B8               	movwf	_Pino+24
  1089     0044                     l718:
  1090                           
  1091                           ;Saida.c: 41:     Pino[2].tempoTroca = 1 * 100;
  1092     0044  3064               	movlw	100
  1093     0045  00B9               	movwf	_Pino+25
  1094     0046                     l720:
  1095                           
  1096                           ;Saida.c: 42:     Pino[2].valorAtual = initial_value;
  1097     0046  01BA               	clrf	_Pino+26
  1098     0047                     l722:
  1099                           
  1100                           ;Saida.c: 43:     Pino[2].valorAnterior = !initial_value;
  1101     0047  01BB               	clrf	_Pino+27
  1102     0048  0ABB               	incf	_Pino+27,f
  1103     0049                     l724:
  1104                           
  1105                           ;Saida.c: 44:     Pino[2].ultimoTempo = 0;
  1106     0049  01BC               	clrf	_Pino+28
  1107     004A  01BD               	clrf	_Pino+29
  1108     004B                     l726:
  1109                           
  1110                           ;Saida.c: 47:     Pino[3].port = &PORTA;
  1111     004B  3000               	movlw	0
  1112     004C  00BF               	movwf	(low ((_Pino| 0+30))+1)
  1113     004D  3005               	movlw	5
  1114     004E  00BE               	movwf	low ((_Pino| 0+30))
  1115     004F                     l728:
  1116                           
  1117                           ;Saida.c: 48:     Pino[3].tris = &TRISA;
  1118     004F  3000               	movlw	0
  1119     0050  00C1               	movwf	(low ((_Pino| 0+32))+1)
  1120     0051  3085               	movlw	133
  1121     0052  00C0               	movwf	low ((_Pino| 0+32))
  1122     0053                     l730:
  1123                           
  1124                           ;Saida.c: 49:     Pino[3].pinMask = 0b00010000;
  1125     0053  3010               	movlw	16
  1126     0054  00C2               	movwf	_Pino+34
  1127     0055                     l732:
  1128                           
  1129                           ;Saida.c: 50:     Pino[3].tempoTroca = 1 * 100;
  1130     0055  3064               	movlw	100
  1131     0056  00C3               	movwf	_Pino+35
  1132     0057                     l734:
  1133                           
  1134                           ;Saida.c: 51:     Pino[3].valorAtual = initial_value;
  1135     0057  01C4               	clrf	_Pino+36
  1136     0058                     l736:
  1137                           
  1138                           ;Saida.c: 52:     Pino[3].valorAnterior = !initial_value;
  1139     0058  01C5               	clrf	_Pino+37
  1140     0059  0AC5               	incf	_Pino+37,f
  1141     005A                     l738:
  1142                           
  1143                           ;Saida.c: 53:     Pino[3].ultimoTempo = 0;
  1144     005A  01C6               	clrf	_Pino+38
  1145     005B  01C7               	clrf	_Pino+39
  1146     005C                     l740:
  1147                           
  1148                           ;Saida.c: 56:     Pino[4].port = &PORTA;
  1149     005C  3000               	movlw	0
  1150     005D  00C9               	movwf	(low ((_Pino| 0+40))+1)
  1151     005E  3005               	movlw	5
  1152     005F  00C8               	movwf	low ((_Pino| 0+40))
  1153     0060                     l742:
  1154                           
  1155                           ;Saida.c: 57:     Pino[4].tris = &TRISA;
  1156     0060  3000               	movlw	0
  1157     0061  00CB               	movwf	(low ((_Pino| 0+42))+1)
  1158     0062  3085               	movlw	133
  1159     0063  00CA               	movwf	low ((_Pino| 0+42))
  1160     0064                     l744:
  1161                           
  1162                           ;Saida.c: 58:     Pino[4].pinMask = 0b01000000;
  1163     0064  3040               	movlw	64
  1164     0065  00CC               	movwf	_Pino+44
  1165     0066                     l746:
  1166                           
  1167                           ;Saida.c: 59:     Pino[4].tempoTroca = 1 * 100;
  1168     0066  3064               	movlw	100
  1169     0067  00CD               	movwf	_Pino+45
  1170     0068                     l748:
  1171                           
  1172                           ;Saida.c: 60:     Pino[4].valorAtual = initial_value;
  1173     0068  01CE               	clrf	_Pino+46
  1174     0069                     l750:
  1175                           
  1176                           ;Saida.c: 61:     Pino[4].valorAnterior = !initial_value;
  1177     0069  01CF               	clrf	_Pino+47
  1178     006A  0ACF               	incf	_Pino+47,f
  1179     006B                     l752:
  1180                           
  1181                           ;Saida.c: 62:     Pino[4].ultimoTempo = 0;
  1182     006B  01D0               	clrf	_Pino+48
  1183     006C  01D1               	clrf	_Pino+49
  1184     006D                     l754:
  1185                           
  1186                           ;Saida.c: 65:     for (i = 0; i < 5; i++) {
  1187     006D  01F3               	clrf	Init_Saidas@i
  1188     006E                     l760:
  1189                           
  1190                           ;Saida.c: 66:         *(Pino[0].tris) &= ~(Pino[0].pinMask);
  1191     006E  0924               	comf	_Pino+4,w
  1192     006F  00FF               	movwf	btemp+1
  1193     0070  0822               	movf	low ((_Pino| 0+2)),w
  1194     0071  0084               	movwf	4
  1195     0072  1783               	bsf	3,7
  1196     0073  1C23               	btfss	(low ((_Pino| 0+2))+1),0
  1197     0074  1383               	bcf	3,7
  1198     0075  087F               	movf	btemp+1,w
  1199     0076  0580               	andwf	0,f
  1200     0077                     l762:
  1201                           
  1202                           ;Saida.c: 67:     }
  1203     0077  3001               	movlw	1
  1204     0078  00FF               	movwf	btemp+1
  1205     0079  087F               	movf	btemp+1,w
  1206     007A  07F3               	addwf	Init_Saidas@i,f
  1207     007B                     l764:
  1208     007B  3005               	movlw	5
  1209     007C  0273               	subwf	Init_Saidas@i,w
  1210     007D  1C03               	skipc
  1211     007E  2880               	goto	u71
  1212     007F  2881               	goto	u70
  1213     0080                     u71:
  1214     0080  286E               	goto	l760
  1215     0081                     u70:
  1216     0081                     l72:
  1217     0081  0008               	return
  1218     0082                     __end_of_Init_Saidas:
  1219                           
  1220                           	psect	text8
  1221     015D                     __ptext8:	
  1222 ;; *************** function _Init_Osc *****************
  1223 ;; Defined at:
  1224 ;;		line 26 in file "Init.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1238 ;;      Params:         0       0       0       0
  1239 ;;      Locals:         0       0       0       0
  1240 ;;      Temps:          2       0       0       0
  1241 ;;      Totals:         2       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_Inicializar_Hardware
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252     015D                     _Init_Osc:	
  1253                           ;psect for function _Init_Osc
  1254                           
  1255     015D                     l670:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _Init_Osc: [wreg]
  1258                           
  1259                           
  1260                           ;Init.c: 28:     PCONbits.OSCF = 1;
  1261     015D  1683               	bsf	3,5	;RP0=1, select bank1
  1262     015E  1303               	bcf	3,6	;RP1=0, select bank1
  1263     015F  158E               	bsf	14,3	;volatile
  1264     0160                     l672:
  1265                           
  1266                           ;Init.c: 29:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1267     0160  300D               	movlw	13
  1268     0161  00F4               	movwf	??_Init_Osc+1
  1269     0162  30FB               	movlw	251
  1270     0163  00F3               	movwf	??_Init_Osc
  1271     0164                     u187:
  1272     0164  0BF3               	decfsz	??_Init_Osc,f
  1273     0165  2964               	goto	u187
  1274     0166  0BF4               	decfsz	??_Init_Osc+1,f
  1275     0167  2964               	goto	u187
  1276     0168  2969               	nop2
  1277     0169                     l56:
  1278     0169  0008               	return
  1279     016A                     __end_of_Init_Osc:
  1280                           
  1281                           	psect	text9
  1282     0111                     __ptext9:	
  1283 ;; *************** function _interruptsManager *****************
  1284 ;; Defined at:
  1285 ;;		line 14 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, btemp+1
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1299 ;;      Params:         0       0       0       0
  1300 ;;      Locals:         0       0       0       0
  1301 ;;      Temps:          3       0       0       0
  1302 ;;      Totals:         3       0       0       0
  1303 ;;Total ram usage:        3 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		Interrupt level 1
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312     0111                     _interruptsManager:	
  1313                           ;psect for function _interruptsManager
  1314                           
  1315     0111                     i1l776:
  1316                           
  1317                           ;main.c: 16:     if (INTCONbits.T0IE && INTCONbits.T0IF) {
  1318     0111  1E8B               	btfss	11,5	;volatile
  1319     0112  2914               	goto	u8_21
  1320     0113  2915               	goto	u8_20
  1321     0114                     u8_21:
  1322     0114  2922               	goto	i1l18
  1323     0115                     u8_20:
  1324     0115                     i1l778:
  1325     0115  1D0B               	btfss	11,2	;volatile
  1326     0116  2918               	goto	u9_21
  1327     0117  2919               	goto	u9_20
  1328     0118                     u9_21:
  1329     0118  2922               	goto	i1l18
  1330     0119                     u9_20:
  1331     0119                     i1l780:
  1332                           
  1333                           ;main.c: 17:         TMR0 = 6;
  1334     0119  3006               	movlw	6
  1335     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1336     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1337     011C  0081               	movwf	1	;volatile
  1338     011D                     i1l782:
  1339                           
  1340                           ;main.c: 18:         INTCONbits.TMR0IF = 0;
  1341     011D  110B               	bcf	11,2	;volatile
  1342     011E                     i1l784:
  1343                           
  1344                           ;main.c: 19:         counter_100ms++;
  1345     011E  3001               	movlw	1
  1346     011F  00FF               	movwf	btemp+1
  1347     0120  087F               	movf	btemp+1,w
  1348     0121  07FA               	addwf	_counter_100ms,f
  1349     0122                     i1l18:
  1350     0122  0872               	movf	??_interruptsManager+2,w
  1351     0123  00FF               	movwf	btemp+1
  1352     0124  0871               	movf	??_interruptsManager+1,w
  1353     0125  008A               	movwf	10
  1354     0126  0E70               	swapf	??_interruptsManager,w
  1355     0127  0083               	movwf	3
  1356     0128  0EFE               	swapf	btemp,f
  1357     0129  0E7E               	swapf	btemp,w
  1358     012A  0009               	retfie
  1359     012B                     __end_of_interruptsManager:
  1360     007E                     btemp	set	126	;btemp
  1361     007E                     wtemp0	set	126
  1362                           
  1363                           	psect	intentry
  1364     0004                     __pintentry:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _interruptsManager: [wreg+status,2+status,0+btemp+1]
  1367                           
  1368     0004                     interrupt_function:
  1369     007E                     saved_w	set	btemp
  1370     0004  00FE               	movwf	btemp
  1371     0005  0E03               	swapf	3,w
  1372     0006  00F0               	movwf	??_interruptsManager
  1373     0007  080A               	movf	10,w
  1374     0008  00F1               	movwf	??_interruptsManager+1
  1375     0009  087F               	movf	btemp+1,w
  1376     000A  00F2               	movwf	??_interruptsManager+2
  1377     000B  2911               	ljmp	_interruptsManager
  1378                           
  1379                           	psect	config
  1380                           
  1381                           ;Config register CONFIG @ 0x2007
  1382                           ;	Oscillator Selection bits
  1383                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1384                           ;	Watchdog Timer Enable bit
  1385                           ;	WDTE = OFF, WDT disabled
  1386                           ;	Power-up Timer Enable bit
  1387                           ;	PWRTE = OFF, PWRT disabled
  1388                           ;	RA5/MCLR/VPP Pin Function Select bit
  1389                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  1390                           ;	Brown-out Detect Enable bit
  1391                           ;	BOREN = OFF, BOD disabled
  1392                           ;	Low-Voltage Programming Enable bit
  1393                           ;	LVP = ON, RB4/PGM pin has PGM function, low-voltage programming enabled
  1394                           ;	Data EE Memory Code Protection bit
  1395                           ;	CPD = OFF, Data memory code protection off
  1396                           ;	Flash Program Memory Code Protection bit
  1397                           ;	CP = OFF, Code protection off
  1398     2007                     	org	8199
  1399     2007  3FB8               	dw	16312

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0      50
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    acionaSaida@pino	PTR struct . size(1) Largest target is 50
		 -> Pino(BANK0[50]), 

    acionaSaida@pino$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    acionaSaida@pino$tris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    Pino$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    Pino$tris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    S179$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S179$tris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 


Critical Paths under _main in COMMON

    _tempo100_ms->_Task_Saida
    _Task_Saida->___bmul
    _Task_Saida->_acionaSaida
    _Inicializar_Hardware->_Init_Osc

Critical Paths under _interruptsManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptsManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptsManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptsManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     760
                                              9 COMMON     1     1      0
               _Inicializar_Hardware
                        _tempo100_ms
 ---------------------------------------------------------------------------------
 (1) _tempo100_ms                                          0     0      0     580
                         _Task_Saida
 ---------------------------------------------------------------------------------
 (2) _Task_Saida                                           3     3      0     580
                                              6 COMMON     3     3      0
                             ___bmul
                        _acionaSaida
 ---------------------------------------------------------------------------------
 (3) _acionaSaida                                          3     3      0     105
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     274
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Inicializar_Hardware                                 0     0      0     180
                           _Init_Osc
                        _Init_Saidas
                         _Init_Timer
 ---------------------------------------------------------------------------------
 (2) _Init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Saidas                                          2     2      0     180
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_Osc                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptsManager                                    3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Inicializar_Hardware
     _Init_Osc
     _Init_Saidas
     _Init_Timer
   _tempo100_ms
     _Task_Saida
       ___bmul
       _acionaSaida

 _interruptsManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0      32       3       62.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      3D      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Oct 07 21:26:16 2023

              ___bmul@product 0074                            l21 0179                            l53 0177  
                          l56 0169                            l72 0081                            l81 00DE  
                          l59 015C                            l86 0110                            u10 00E9  
                          u11 00E8                            u70 0081                            u71 0080  
                          fsr 0004                           l700 002D                           l710 0038  
                         l702 0031                           l198 013F                           l630 00E0  
                         l720 0046                           l712 003A                           l704 0033  
                         l800 0131                           l632 00E9                           l730 0053  
                         l722 0047                           l714 003E                           l706 0035  
                         l802 0135                           l634 00FD                           l740 005C  
                         l732 0055                           l724 0049                           l716 0042  
                         l708 0036                           l804 0137                           l820 0096  
                         l812 0082                           l670 015D                           l750 0069  
                         l742 0060                           l734 0057                           l726 004B  
                         l718 0044                           l806 0139                           l822 00AC  
                         l830 0178                           l672 0160                           l760 006E  
                         l752 006B                           l744 0064                           l736 0058  
                         l728 004F                           l680 0158                           l808 013E  
                         l824 00C5                           l840 014C                           l832 0140  
                         l762 0077                           l754 006D                           l746 0066  
                         l738 005A                           l690 0022                           l682 0015  
                         l674 014F                           l770 0174                           l826 00D4  
                         l818 0084                           l834 0141                           l764 007B  
                         l748 0068                           l692 0024                           l684 0016  
                         l676 0153                           l772 0175                           l828 00D8  
                         l836 0145                           l694 0025                           l686 001C  
                         l678 0157                           l774 0176                           l838 014B  
                         l696 0027                           l688 0020                           l768 0172  
                         l698 0029                           l796 012C                           l798 012D  
                         _GIE 005F                           u110 0131                           u111 0130  
                         u120 013E                           u121 013D                           u130 0096  
                         u131 0095                           u140 00AC                           u141 00AB  
                         u150 00DE                           u151 00DD                           u160 014B  
                         u161 014A                           u177 0143                           u187 0164  
                         fsr0 0004                           indf 0000                          _T0IE 005D  
                        _PEIE 005E                          i1l18 0122                          _TMR0 0001  
                        u8_20 0115                          u8_21 0114                          u9_20 0119  
                        u9_21 0118                          _Pino 0020                          _main 0140  
                        btemp 007E                          start 000C  __end_of_Inicializar_Hardware 0178  
           ___bmul@multiplier 0075                 ??_Init_Saidas 0073                         ?_main 0070  
                       i1l780 0119                         i1l782 011D                         i1l784 011E  
                       i1l776 0111                         i1l778 0115                         _PORTA 0005  
                       _TRISA 0085                         pclath 000A                         status 0003  
                       wtemp0 007E               __initialization 000D                    _Init_Timer 014F  
                __end_of_main 014F                 _counter_100ms 007A              __end_of_Init_Osc 016A  
         __end_of_Init_Saidas 0082                        ??_main 0079                  ?_tempo100_ms 0070  
                  _Task_Saida 0082                        ___bmul 012B                  Init_Saidas@i 0073  
                      saved_w 007E          _Inicializar_Hardware 0172       __end_of__initialization 0013  
         ___bmul@multiplicand 0073                __pcstackCOMMON 0070                   ?_Init_Timer 0070  
                 _Init_Saidas 0015                _OPTION_REGbits 0081         ?_Inicializar_Hardware 0070  
                 Task_Saida@i 0078                    __pbssBANK0 0020                     ?_Init_Osc 0070  
                 ?_Task_Saida 0070                    __pmaintext 0140                       ?___bmul 0073  
                  __pintentry 0004                    ??_Init_Osc 0073                 ??_acionaSaida 0073  
                     __ptext1 0178                       __ptext2 0082                       __ptext3 00DF  
                     __ptext4 012B                       __ptext5 0172                       __ptext6 014F  
                     __ptext7 0015                       __ptext8 015D                       __ptext9 0111  
      ??_Inicializar_Hardware 0075                       clrloop0 016B          end_of_initialization 0013  
         __end_of_acionaSaida 0111                  ??_Init_Timer 0073                  ?_Init_Saidas 0070  
              __end_of___bmul 0140           start_initialization 000D            __end_of_Init_Timer 015D  
                ??_Task_Saida 0076                   _acionaSaida 00DF                      ??___bmul 0074  
          __end_of_Task_Saida 00DF                   __pbssCOMMON 007A                     ___latbits 0000  
           _interruptsManager 0111                 ??_tempo100_ms 0079            ?_interruptsManager 0070  
           interrupt_function 0004                     clear_ram0 016A           ??_interruptsManager 0070  
                    _PCONbits 008E     __end_of_interruptsManager 012B                      _Init_Osc 015D  
         __end_of_tempo100_ms 017A                  ?_acionaSaida 0070                    _INTCONbits 000B  
                 _tempo100_ms 0178                      intlevel1 0000               acionaSaida@pino 0075  
